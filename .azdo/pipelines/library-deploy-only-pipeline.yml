# ----------------------------------------------------------------------------------------------------
# Pipeline to deploy a Function App from an existing artifact
# See readme file for info about variable group "DadABase.Function.Keys"
# ----------------------------------------------------------------------------------------------------
# NOTE: This pipeline assumes that the artifact has already been created by a previous pipeline
# ----------------------------------------------------------------------------------------------------
# WARNING: You will probably want to put some more gates in here around a PROD deploy!!!
#          This sample will let you deploy whatever you choose to any environment...
#          The environment approval process should filter that some, but you may want more
#          like a check to see if the build came from the "Release" branch or something like that.
# ----------------------------------------------------------------------------------------------------
name: $(date:yyyy).$(date:MM).$(date:dd)$(rev:.r)
pool:
  vmImage: ubuntu-latest

# ----------------------------------------------------------------------------------------------------
resources:
  repositories:
  - repository: devops.library
    type: git
    name: devops.library
    ref: master

  pipelines:
  - pipeline: dadabase.func.build.deploy # internal identifier for the resource
    source: dadabase.func.infra.and.build.deploy   # name of the pipeline that produces an artifact
    #source: dadabase.func.build.deploy   # name of the pipeline that produces an artifact
    branch: main                          # should only allow builds from the main branch to be used

# ----------------------------------------------------------------------------------------------------
variables:
  - group: DadABase.Function.Keys
  - template: vars/var-service-connections.yml

# ----------------------------------------------------------------------------------------------------
trigger:
  - none

# ----------------------------------------------------------------------------------------------------
parameters:
  - name: deployToEnvironment
    displayName: Deploy To
    type: string
    values:
      - DEV
      - QA
      - PROD
      - MULTIPLE
    default: DEV

# ----------------------------------------------------------------------------------------------------
stages:
- ${{ if ne(parameters.deployToEnvironment, 'DEV-QA-PROD') }}:
  - template: /azdo/Pipelines/pipes/deploy-only-pipe.yml@devops.library
    parameters:
      environments: [ '${{ parameters.deployToEnvironment }}' ]
      pipelineResourceIdentifier: 'dadabase.func.build.deploy'

- ${{ if eq(parameters.deployToEnvironment, 'DEV-QA-PROD') }}:
  - template: /azdo/Pipelines/pipes/deploy-only-pipe.yml@devops.library
    parameters:
      environments: ['DEV','PROD']
      pipelineResourceIdentifier: 'dadabase.func.build.deploy'
